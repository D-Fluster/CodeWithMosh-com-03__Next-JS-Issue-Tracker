import "./globals.css";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import NavBar from "./NavBar";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Dani's Issue Tracker",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body className={inter.className}>
        <NavBar />
        <main>{children}</main>
      </body>
    </html>
  );
}

// // // // // // // // // // // // // // // // // // // //

/* NOTES:

// 
// BUILDING THE NAV BAR
// https://youtu.be/J9sfR6HN6BY?t=660
// 

See "app/NavBar.tsx"

We can build "NavBar.tsx" directly in our "app" folder,
// rather than a separate "componets" folder/directory,
// because we're using Next.JS 13 with the new App Router

Rather than having to put all of our components in their
// own "components" directory, we can instead just
// co-locate our components withe the pages and/or 
// layouts in which they'll be used

In this case, our navigation bar will *not* be a reusable
// component, but rather will only be needed in the layout
// and thus it's co-located in the "app" folder 
// alongside our "layout.tsx" file

Mosh prefers to wrap the {children} portion of the <body>
// element in their own <main> element to make the pages
// more sematic (semantic?)

*/
